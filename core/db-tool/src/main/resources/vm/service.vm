#if($tableInfo.obj.name.startsWith("gj_"))    
$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.substring(3)))
#end
##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Service"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;

import $!{tableInfo.savePackageName}.persistent.entity.$!{tableInfo.name}DO; 

import com.baomidou.mybatisplus.core.metadata.IPage;
import java.io.Serializable;
import java.util.List;
/**
 * $!{tableInfo.comment}($!{tableInfo.name})表服务接口
 *
 * @author $!author
 * @since $!time.currTime()
 */

public interface $!{tableName} {
 /**
     * 分页查询
     *
     * @param param 筛选条件
     * @param pageSize      分页大小
     * @param pageNum      起始页
     * @return 查询结果
     */
    IPage<$!{tableInfo.name}DO> page($!{tableInfo.name}DO param, Integer pageSize, Integer pageNum);
    /**
     * 通过ID查询单条数据
     *
     * @param $!pk.name 主键
     * @return 实例对象
     */
    $!{tableInfo.name}DO load($!pk.shortType  $!pk.name);

    /**
     * 修改数据
     *
     * @param param 实例对象
     * @return 实例对象
     */
    void update($!{tableInfo.name}DO param);
     /**
     * 通过主键删除数据
     *
     * @param $!pk.name 主键
     * @return 是否成功
     */
    void remove($!pk.shortType $!pk.name);
     /**
     * 根据条件查询数据
     *
     * @param param 查询条件
     * @return 是否成功
     */
    List<$!{tableInfo.name}DO> list($!{tableInfo.name}DO param);
    /**
     * 新增数据
     *
     * @param param 实例对象
     * @return 实例对象
     */
     Serializable add($!{tableInfo.name}DO param);
}

 